  301  ls
  302  mkdir -p iris-observable-project/app
  303  mkdir -p iris-observable-project/k8s
  304  cd iris-observable-project
  305  ls
  306  nano pyproject.toml
  307  ls
  308  nano app/main.py
  309  cd ..
  310  ls
  311  cd iris-project
  312  ls
  313  cd fast_iris
  314  ls
  315  cd ~
  316  ls
  317  cd iris-observable-project
  318  ls
  319  cp ../iris-project/fast_iris/model.joblib app/
  320  ls
  321  cd app
  322  ls
  323  cd ..
  324  nano Dockerfile
  325  gcloud iam service-accounts create telemetry-access
  326  export PROJECT_ID=$(gcloud config get-value project)
  327  gcloud projects add-iam-policy-binding $PROJECT_ID   --member="serviceAccount:telemetry-access@$PROJECT_ID.iam.gserviceaccount.com"   --role="roles/logging.logWriter"
  328  gcloud projects add-iam-policy-binding $PROJECT_ID   --member="serviceAccount:telemetry-access@$PROJECT_ID.iam.gserviceaccount.com"   --role="roles/cloudtrace.agent"
  329  gcloud iam service-accounts add-iam-policy-binding   telemetry-access@$PROJECT_ID.iam.gserviceaccount.com   --role roles/iam.workloadIdentityUser   --member "serviceAccount:$PROJECT_ID.svc.id.goog[default/telemetry-access]"
  330  export IMAGE_NAME="iris-observable-api"
  331  export IMAGE_TAG="latest"
  332  export IMAGE_PATH="us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/$IMAGE_NAME:$IMAGE_TAG"
  333  docker build -t $IMAGE_PATH .
  334  cd iris-observable-project
  335  nano pyproject.toml
  336  poetry lock --no-update
  337  docker build -t $IMAGE_PATH .
  338  export IMAGE_NAME="iris-observable-api"
  339  export IMAGE_TAG="latest"
  340  export IMAGE_PATH="us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/$IMAGE_NAME:$IMAGE_TAG"
  341  docker build -t $IMAGE_PATH .
  342  export PROJECT_ID=$(gcloud config get-value project)
  343  export IMAGE_PATH="us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/iris-observable-api:latest"
  344  echo $IMAGE_PATH
  345  poetry lock
  346  vim pyproject.toml
  347  nano pyproject.toml
  348  poetry lock
  349  export PROJECT_ID=$(gcloud config get-value project)
  350  export IMAGE_PATH="us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/iris-observable-api:latest"
  351  docker build -t $IMAGE_PATH .
  352  nano k8s/deployment.yaml
  353  nano k8s/service.yaml
  354  nano k8s/hpa.yaml
  355  sed -i "s|__IMAGE_PATH_AND_TAG__|${IMAGE_PATH}|g" k8s/deployment.yaml
  356  gcloud container clusters get-credentials $CLUSTER_NAME --zone=$GCP_ZONE
  357  export CLUSTER_NAME="iris-scaling-cluster"
  358  export GCP_ZONE="us-central1-a"
  359  gcloud container clusters get-credentials $CLUSTER_NAME --zone=$GCP_ZONE
  360  kubectl create serviceaccount telemetry-access
  361  kubectl annotate serviceaccount telemetry-access   iam.gke.io/gcp-service-account=telemetry-access@$PROJECT_ID.iam.gserviceaccount.com
  362  kubectl apply -f k8s/deployment.yaml
  363  kubectl apply -f k8s/service.yaml
  364  kubectl apply -f k8s/hpa.yaml
  365  kubectl get service iris-observable-service
  366  export EXTERNAL_IP=$(kubectl get service iris-observable-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  367  curl -X POST "http://$EXTERNAL_IP/predict"   -H "Content-Type: application/json"   -d '{
    "sepal_length": 5.1,
    "sepal_width": 3.5,
    "petal_length": 1.4,
    "petal_width": 0.2
  }'
  368  kubectl get pods -l app=iris-observable-api
  369  kubectl describe service iris-observable-service
  370  kubectl describe pod iris-observable-deployment-585fbf6859-ms8s9
  371  export PROJECT_ID=$(gcloud config get-value project)
  372  export IMAGE_PATH="us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/iris-observable-api:latest"
  373  docker build -t $IMAGE_PATH .
  374  docker push $IMAGE_PATH
  375  kubectl delete deployment iris-observable-deployment
  376  kubectl apply -f k8s/deployment.yaml
  377  kubectl get pods --watch
  378  kubectl describe service iris-observable-service
  379  kubectl get service iris-observable-service
  380  sudo apt-get update && sudo apt-get install -y wrk
  381  nano post.lua
  382  wrk -t4 -c100 -d30s --latency -s post.lua http://34.55.215.228/predict
  383  sudo sed -i '/bullseye-backports/d' /etc/apt/sources.list /etc/apt/sources.list.d/*.list
  384  sudo apt-get update
  385  sudo apt-get install -y wrk
  386  wrk -t4 -c100 -d30s --latency -s post.lua http://34.55.215.228/predict
  387  resource.labels.container_name="app-container"
  388  kubectl get pods -l app=iris-observable-api
  389  kubectl logs <pod-name>
  390  kubectl logs iris-observable-deployment-585fbf6859-ppnsh
  391  kubectl describe sa telemetry-access
  392  kubectl get pods -l app=iris-observable-api
  393  wrk -t4 -c100 -d30s --latency -s post.lua http://34.55.215.228/predict
  394  # Check cluster logging configuration
  395  gcloud container clusters describe $CLUSTER_NAME --zone=$GCP_ZONE --format="value(loggingService)"
  396  # Should show something like "logging.googleapis.com/kubernetes"
  397  gcloud container clusters describe $CLUSTER_NAME --zone=$GCP_ZONE --format="value(loggingService)"
  398  kubectl logs iris-observable-deployment-585fbf6859-ppnsh
  399  gcloud container clusters describe $CLUSTER_NAME --zone=$GCP_ZONE --format="value(loggingConfig.componentConfig)"
  400  gcloud projects get-iam-policy $(gcloud config get-value project) --flatten="bindings[].members" --format="table(bindings.role)" --filter="bindings.members:*$(gcloud config get-value project)*"
  401  gcloud projects get-iam-policy $(gcloud config get-value project) --flatten="bindings[].members" --format="table(bindings.role)" --filter="bindings.members:$(gcloud config get-value project)"
  402  kubectl get pods -n kube-system | grep logging
  403  kubectl get pods -n kube-system | grep fluent
  404  kubectl get pods -n gke-system | grep logging
  405  kubectl get events --sort-by='.lastTimestamp' | grep -i error
  406  export PROJECT_NUMBER=$(gcloud projects describe $(gcloud config get-value project) --format='value(projectNumber)')
  407  export GCE_SERVICE_ACCOUNT="${PROJECT_NUMBER}-compute@developer.gserviceaccount.com"
  408  gcloud projects get-iam-policy $(gcloud config get-value project)   --flatten="bindings[].members"   --format='table(bindings.role)'   --filter="bindings.members:serviceAccount:${GCE_SERVICE_ACCOUNT}"
  409  export PROJECT_NUMBER=$(gcloud projects describe $(gcloud config get-value project) --format='value(projectNumber)')
  410  export GCE_SERVICE_ACCOUNT="${PROJECT_NUMBER}-compute@developer.gserviceaccount.com"
  411  gcloud projects add-iam-policy-binding $(gcloud config get-value project)     --member="serviceAccount:${GCE_SERVICE_ACCOUNT}"     --role="roles/logging.logWriter"
  412  kubectl get pods -l app=iris-observable-api
  413  nano deployment.yaml
  414  ls
  415  cd k8s
  416  ls
  417  cd deployment.yaml
  418  nano deployment.yaml
  419  cd ..
  420* 
  421  kubectl get pods -l app=iris-observable-api
  422  kubectl logs iris-observable-deployment-585fbf6859-ppnsh > logs_iris-observable-deployment-585fbf6859-ppnsh.txt
  423  kubectl logs iris-observable-deployment-585fbf6859-x6vdh > log_iris-observable-deployment-585fbf6859-x6vdh.txt
  424  ls
  425  wrk -t4 -c100 -d30s --latency -s post.lua http://34.55.215.228/predict > wrk_results.txt
  426  ls
  427  git init
  428  git add .
  429  git commit -m "Initial commit of observable ML pipeline"
  430  git remote add origin https://github.com/adhithyasash1/observable-k8s-pipeline.git
  431  git push -u origin main
  432  git push -u origin
  433  git push -u origin master
  434  history > command_history.txt
